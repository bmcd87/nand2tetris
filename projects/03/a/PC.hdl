// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    Mux16(a=outReg, b=in, sel=load, out=muxOut);
    Not(in=inc, out=notInc);
    Or8Way(in[0]=notInc, in[1]=reset, in[2]=load, in[3..7]=false, out=dontInc);
    ALU(x=muxOut, y[1..15]=false, y[0]=true, zx=reset, nx=false, zy=dontInc, ny=false, f=true, no=false, out=aluOut);
    Or8Way(in[0]=inc, in[1]=reset, in[2]=load, in[3..7]=false, out=changed);
    Register(in=aluOut, load=changed, out=out, out=outReg);
}
